plugins {
    id 'org.springframework.boot' version '3.0.6'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'

group 'ru.mai.lessons.rpks'
version '1.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {

    //spring boot
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //spring boot thymeleaf template
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.0.5'

    //open api, swagger
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.0.2'
    implementation 'io.swagger:swagger-models:1.6.10'

    //spring validation
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.0.5'

    //spring jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.5'
    //spring actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.0.5'
    implementation 'de.codecentric:spring-boot-admin-starter-client:3.0.3'

    // logging
    implementation 'ch.qos.logback:logback-classic:1.4.5'

    // code generator
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    // databases
    implementation 'org.postgresql:postgresql:42.5.4'
    implementation 'com.zaxxer:HikariCP:5.0.1'
    implementation 'org.jooq:jooq:3.17.8'

    // json
    implementation 'com.fasterxml.jackson.core:jackson-core:2.14.2'

    // test
    testImplementation 'org.testcontainers:testcontainers:1.17.6'
    testImplementation "org.testcontainers:junit-jupiter:1.17.6"
    testImplementation "org.testcontainers:postgresql:1.17.6"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testCompileOnly "org.projectlombok:lombok:1.18.26"
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

}

test {
    useJUnitPlatform()
}